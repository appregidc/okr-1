openapi: 3.0.0
info: 
  title: OKR
  description: App to create and track OKRs
  contact:
    name: Olivier
    email: olivier.demeulder@nytimes.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
servers:
  - url: https://okr.nyt.net
  - url: https://okr.stg.nyt.net
tags:
  - name: objective
    description: The O in OKRs 
  - name: kr
    description: Key Result, the KR in OKRs
  - name: comment
    description: Comment. A comment can be tied to an Objective, a KR or another comment (reply).
paths:
  /objective:
    get:
      tags:
        - objective
      summary: Get list of objectives
      description: Returns all objectives, filter by org, status or planning period.
      operationId: getObjective
      parameters:
        - in: query
          name: org
          schema:
            type: integer
            format: int64
          description: Filter objectives based on org id.
        - in: query
          name: planning_period
          schema:
            type: integer
            format: int64
          description: Filter objectives based on planning period.
        - in: query
          name: status
          schema:
            type: string
          description: Filter objectives based on objective status.
      responses:
        '200':
          description: A list of objectives.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Objective'
    post:
      tags:
        - objective
      summary: Add a new objective to the repository
      description: ''
      operationId: addObjective
      requestBody:
        description: Objective object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Objective'
        required: true
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - objective
      summary: Update an existing objective
      description: ''
      operationId: updateObjective
      requestBody:
        description: Objective object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Objective'
        required: true
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
        '405':
          description: Validation exception
  /objective/{objectiveId}:
    get:
      tags:
        - objective
      summary: Find objective by ID
      description: Returns a single objective
      operationId: getObjectiveById
      parameters:
        - name: objectiveId
          in: path
          description: ID of objective to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Objective'
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
    delete:
      tags:
        - objective
      summary: Deletes an objective
      description: ''
      operationId: deleteObjective
      parameters:
        - name: api_key
          in: header
          required: false
          schema:
            type: string
        - name: objectiveId
          in: path
          description: Objective id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
  /objective/{objectiveId}/comments:
    get:
      tags:
        - objective
        - comment
      summary: Get comments for an objective
      operationId: getCommentsByObjective
      parameters:
        - name: objectiveId
          in: path
          required: true
          description: Objective Id for which to get KRs
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
  /objective/{objectiveId}/krs:
    get:
      tags:
        - kr
        - objective
      summary: Get key results for an objective
      operationId: getKrsById
      parameters:
        - name: objectiveId
          in: path
          required: true
          description: Objective Id for which to get KRs
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Kr'
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
        
  /kr:
    post:
      tags:
        - kr
      summary: Create new kr
      operationId: addKr
      requestBody:
        description: KR object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kr'
        required: true
      responses:
        '405':
          description: Invalid input      
    put:
      tags:
        - kr
      summary: Update existing kr
      operationId: updateKr
      requestBody:
        description: KR object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Kr'
        required: true
      responses:
        '405':
          description: Invalid input
  /kr/{krId}:
    delete:
      tags:
        - kr
      summary: Delete a Kr
      operationId: deleteKr
      parameters:
        - name: krId
          in: path
          required: true
          description: KR Id to be deleted
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: KR not found
  /kr/{krId}/comments:
    get:
      tags:
        - kr
        - comment
      summary: Get comments for a key result
      operationId: getCommentsByKr
      parameters:
        - name: krId
          in: path
          required: true
          description: Kr Id for which to get Comments
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
        
  /comment:
    post:
      tags:
        - comment
      summary: Create a comment
      operationId: createComment
      requestBody:
        description: Comment object that needs to be added to an entity.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '405':
          description: Invalid input      
    put:
      tags:
        - comment
      summary: Update existing comment
      operationId: updateComment
      requestBody:
        description: Comment object to update.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '405':
          description: Invalid input
  /comment/{commentId}:
    delete:
      tags:
        - comment
      summary: Delete a comment
      operationId: deleteComment
      parameters:
        - name: commentId
          in: path
          required: true
          description: Comment Id to be deleted.
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Comment not found

  /comment/{commentId}/replies:
    get:
      tags:
        - comment
      summary: Get replies for a comment
      operationId: getCommentsByComment
      parameters:
        - name: commentId
          in: path
          required: true
          description: Commment Id for which to get Comments
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid ID supplied
        '404':
          description: Objective not found
        

components:
  schemas:
    ObjectiveStatus:
      type: string
      enum: 
        - Proposed
        - Active
        - InProgress
        - Achieved
        - PartiallyAchieved
        - Cancelled  
    KrStatus:
      type: string
      enum: 
        - Proposed
        - Active
        - InProgress
        - Done
        - Cancelled
    EntityType:
      type: string
      enum:
        - Objective
        - Kr
        - Comment
    OrgLevel:
      type: string
      enum:
        - Company
        - Mission
        - Group
        - Team
    PlanningPeriodStatus:
      type: string
      enum:
        - Past
        - Current
        - Future
    Objective:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        description:
          type: string
        organization_id:
          type: integer
          format: int64
        parent_id:
          type: integer
          format: int64
        planning_period_id:
          type: integer
          format: int64
        status: 
          $ref: '#/components/schemas/ObjectiveStatus'
        created_by: 
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated_by: 
          type: integer
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
    Kr:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        description: 
          type: string
        baseline:
          type: string
        score:
          type: integer
          minimum: 0
          maximum: 100
        result:
          type: string
        major_initiative:
          type: string
        objective_id:
          type: integer
        status:
          $ref: '#/components/schemas/KrStatus'
        created_by: 
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated_by: 
          type: integer
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        comment: 
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        entity_id:
          type: integer
        created_by: 
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated_by: 
          type: integer
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        
